{
  "openapi": "3.0.0",
  "info": {
    "version": "localhost",
    "title": "Frete Rapido Integration API",
    "description": "Frete Rapido Integration API"
  },
  "servers": [
    {
      "url": "http://localhost:3000/frete-rapido"
    }
  ],
  "paths": {
    "/v1/metrics": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "description": "Get the metrics of all quotes stored in the database.",
        "parameters": [
          {
            "name": "last_quotes",
            "in": "query",
            "description": "Defines how many most recent quotes will be taken into account to generate the metric.",
            "example": 10,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricsOutputDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MetricsOutputDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorPattern500"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorPattern500"
                }
              }
            }
          }
        }
      }
    },
    "/v1/quote": {
      "post": {
        "tags": [
          "Quote"
        ],
        "description": "Create a shipping quote using the external API Frete Rapido",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "All data is mandatory for endpoint consumption",
            "schema": {
              "$ref": "#/components/schemas/QuoteBodyInputDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuoteOutputDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/QuoteOutputDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorPattern400"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorPattern400"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorPattern500"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorPattern500"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "MetricsOutputDto": {
        "type": "object",
        "properties": {
          "carriers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Oliveira S.A."
                },
                "maxPrice": {
                  "type": "number",
                  "example": 0.79
                },
                "mediaPrice": {
                  "type": "number",
                  "example": 0.71
                },
                "minPrice": {
                  "type": "number",
                  "example": 0.49
                },
                "totalPrice": {
                  "type": "number",
                  "example": 0.27
                },
                "totalSimulations": {
                  "type": "number",
                  "example": 4
                }
              }
            }
          },
          "maxPriceGeneral": {
            "type": "number",
            "example": 10
          },
          "minPriceGeneral": {
            "type": "number",
            "example": 9
          }
        },
        "xml": {
          "name": "MetricsOutputDto"
        }
      },
      "QuoteBodyInputDto": {
        "type": "object",
        "properties": {
          "recipient": {
            "type": "object",
            "properties": {
              "address": {
                "type": "object",
                "properties": {
                  "zipcode": {
                    "type": "string",
                    "example": "45489553"
                  }
                }
              }
            }
          },
          "volumes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "category": {
                  "type": "number",
                  "example": 7
                },
                "amount": {
                  "type": "number",
                  "example": 3
                },
                "unitary_weight": {
                  "type": "number",
                  "example": 0.7
                },
                "price": {
                  "type": "number",
                  "example": 0.73
                },
                "sku": {
                  "type": "string",
                  "example": "BZFZ*mf8n3"
                },
                "height": {
                  "type": "number",
                  "example": 0.37
                },
                "width": {
                  "type": "number",
                  "example": 0.21
                },
                "length": {
                  "type": "number",
                  "example": 0.73
                }
              }
            }
          }
        },
        "xml": {
          "name": "QuoteBodyInputDto"
        }
      },
      "QuoteOutputDto": {
        "type": "object",
        "properties": {
          "carrier": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "b2733d7e938c2e3ba2e03b81"
                },
                "name": {
                  "type": "string",
                  "example": "Moraes, Franco e Santos"
                },
                "service": {
                  "type": "string",
                  "example": "Franco, Costa e Moreira"
                },
                "deadline": {
                  "type": "number",
                  "example": 1
                },
                "deliveryDate": {
                  "type": "string",
                  "example": "2024-12-24T15:29:07.916Z"
                },
                "price": {
                  "type": "number",
                  "example": 0.13
                },
                "createdAt": {
                  "type": "string",
                  "example": "2024-03-30T23:36:26.460Z"
                },
                "updatedAt": {
                  "type": "string",
                  "example": "2024-03-30T23:36:26.460Z"
                }
              }
            }
          }
        },
        "xml": {
          "name": "QuoteOutputDto"
        }
      },
      "ErrorPattern400": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number",
            "example": 400
          },
          "message": {
            "type": "array",
            "example": [
              "BadRequest"
            ],
            "items": {
              "type": "string"
            }
          },
          "data": {
            "type": "object",
            "properties": {}
          }
        },
        "xml": {
          "name": "ErrorPattern400"
        }
      },
      "ErrorPattern500": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number",
            "example": 500
          },
          "message": {
            "type": "array",
            "example": [
              "InternalServerError"
            ],
            "items": {
              "type": "string"
            }
          },
          "data": {
            "type": "object",
            "properties": {}
          }
        },
        "xml": {
          "name": "ErrorPattern500"
        }
      }
    }
  }
}